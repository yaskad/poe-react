{"version":3,"sources":["assets/ElShaper.jpg","views/Home.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","components/FetchData.js","views/GrindingTime.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","role","className","to","disabled","Home","Layout","props","Container","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Item","Link","elShaperImage","Jumbotron","fluid","useFetch","url","useState","status","setStatus","data","setData","isError","setIsError","useEffect","a","fetch","response","json","fetchData","UserInput","validated","setValidated","items","setSelectedLeague","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Row","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","onChange","e","value","map","key","readOnly","Check","label","feedback","Button","onClick","TimeToNextLevel","App","Fragment","basename","process","exact","path","component","GrindingTime","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a38a5e1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ElShaper.e03b78b8.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <main role=\"main\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <h2>Grinding Time</h2>\n            <p>\n              This tool helps you figure out the time needed to reach a desired\n              level, given an XPH value.\n            </p>\n            <Link to=\"./GrindingTime\" className=\"btn btn-secondary\">\n              Click here to get started\n            </Link>\n          </div>\n          <div className=\"col-md-4\">\n            <h2>XP Penalty</h2>\n            <p>\n              A tool for calculating the XP penalty given character level and\n              Map Tier or area level.\n            </p>\n            <Link to=\"./\" className=\"btn btn-secondary\" disabled>\n              WIP\n            </Link>\n          </div>\n          <div className=\"col-md-4\">\n            <h2>Aura Bot</h2>\n            <p>\n              THIS IS WIP!\n            </p>\n            <Link to=\"./\" className=\"btn btn-secondary\" disabled>\n              WIP\n            </Link>\n          </div>\n        </div>\n        <hr />\n      </div>\n      <footer className=\"container\">\n        <p>&copy; Yasser Kadhim 2022</p>\n        <p>This product isn't affiliated with or endorsed by Grinding Gear Games in any way.</p>\n      </footer>\n    </main>\n  );\n}\n\nexport const Home = () => <HomePage />;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport const Layout = (props) => (\n    <Container>\n        {props.children}\n    </Container>\n)\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n  a,\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: #bbb;\n\n    &:hover {\n      color: #efefef;\n    }\n  }\n`;\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\"> POE </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item>\n            <Nav.Link href=\"/\"> Home</Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n);\n","import React from \"react\";\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport elShaperImage from \"../assets/ElShaper.jpg\";\n\nconst Styles = styled.div`\n  .jumbo {\n    background: url(${elShaperImage}) no-repeat fixed bottom;\n    background-size: cover;\n    background-position: center top;\n    color: #efefef;\n    margin-bottom: 2rem;\n    border-radius: 0.3rem;\n    height: 400px;\n  }\n`;\n\nexport const Jumbotron = () => (\n  <Styles>\n    <Jumbo fluid className=\"jumbo\">\n      <Container>\n        <h1 className=\"display-3\">Path Of Exile Tools</h1>\n        <p className=\"lead\">This site is still under construction.</p>\n      </Container>\n    </Jumbo>\n  </Styles>\n);\n","import React, { useState, useEffect } from \"react\";\nconst useFetch = (url) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [data, setData] = useState([]);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    if (!url) return;\n    const fetchData = async () => {\n      setStatus(\"fetching\");\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n      try {\n      const response = await fetch(proxyurl + url);\n      const data = await response.json();\n      setData(data);\n      setStatus(\"fetched\");\n      } catch(error) {\n          setIsError(true);\n      }\n    };\n    fetchData();\n  }, [url]);\n  if (isError) {\n      return isError && <div>Something went wrong ...</div>\n  } else{\n    return { status, data };\n  }\n};\n\nexport { useFetch };\n","import React, { useState, useEffect, Fragment, useCallback } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { useFetch } from \"../components/FetchData\";\n\nfunction UserInput() {\n  const [validated, setValidated] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [league, setSelectedLeague] = useState();\n\n  //For acc name\n  // const [query, setQuery] = useState(\"\");\n  // const url =\n  //   query &&\n  //   `https://www.pathofexile.com/character-window/get-characters?accountName=${query}`;\n  // const { status, data } = useFetch(url);\n\n  // useEffect(() => {\n  //   fetch(\"https://api.pathofexile.com/leagues?\")\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         setIsLoaded(true);\n  //         setItems(result);\n  //       },\n  //       (error) => {\n  //         setIsLoaded(true);\n  //         setError(error);\n  //       }\n  //     );\n  // }, []);\n\n  // if (error) {\n  //   return <div>Error: {error.message}</div>;\n  // } else if (!isLoaded) {\n  //   return <div>Loading...</div>;\n  // }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Fragment>\n      <p className=\"lead\">Grind Time Calculator</p>\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Form.Row>\n          <Form.Group\n            as={Col}\n            md=\"4\"\n            controlId=\"validationCustomAccountName\"\n            id=\"accountName\"\n          >\n            <Form.Label>Account Name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Please enter account name\"\n              defaultValue=\"\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomLeagueName\">\n            <Form.Label>League Name</Form.Label>\n            <select\n              className=\"form-control\"\n              onChange={(e) => setSelectedLeague(e.currentTarget.value)}\n            >\n              {items.map((id) => (\n                <option key={id.id}>{id.id}</option>\n              ))}\n            </select>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomCharacterName\">\n            <Form.Label>Character Name</Form.Label>\n            <select className=\"form-control\">\n            </select>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md=\"2\" controlId=\"validationCustom04\">\n            <Form.Label>Desired level</Form.Label>\n            <Form.Control type=\"int\" placeholder=\"Int UserInput\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid level.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"2\" controlId=\"validationCustom05\">\n            <Form.Label>XPH</Form.Label>\n            <Form.Control type=\"int\" placeholder=\"Fetch from API\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid XPH value.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"2\" controlId=\"validationCustom05\">\n            <Form.Label>Current Level</Form.Label>\n            <Form.Control\n              type=\"int\"\n              placeholder=\"Fetch from API\"\n              readOnly={true}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid XPH value.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"2\" controlId=\"validationCustom05\">\n            <Form.Label>Current XP</Form.Label>\n            <Form.Control type=\"int\" placeholder=\"Fetch from API\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid XPH value.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Check\n            required\n            label=\"Agree to terms and conditions\"\n            feedback=\"You must agree before submitting.\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" onClick={useFetch} disabled>\n          Submit form\n        </Button>\n      </Form>\n    </Fragment>\n  );\n}\n\nexport const TimeToNextLevel = () => <UserInput />;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Home } from './views/Home';\nimport { Layout } from './components/Layout';\nimport { NavigationBar } from './components/NavigationBar';\nimport { Jumbotron } from './components/Jumbotron';\nimport * as GrindingTime from './views/GrindingTime'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Jumbotron/>\n      <Layout>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/\" component={GrindingTime.TimeToNextLevel} />\n          </Switch>\n        </BrowserRouter>\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}